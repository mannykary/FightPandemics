name: fight-pandemics

on:
  create:
    tags:
      - feature-*
    branches-ignore:
      - 'master'

jobs:
  build_images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - backend
          - client
          - geo-service
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - if: matrix.app == 'client'
        env:
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE: ${{ secrets.AIRTABLE_API_BASE }}
        run: >
          echo "REACT_APP_AIRTABLE_API_KEY=${AIRTABLE_API_KEY}" > ./client/.env
          echo "REACT_APP_AIRTABLE_BASE=${AIRTABLE_BASE}" >> ./client/.env
          cat .env
      - name: docker
        uses: docker/build-push-action@v1.0.1
        with:
          path: ./${{ matrix.app }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: fightpandemics/${{ matrix.app }}
          tag_with_ref: true
  deploy_review:
    runs-on: ubuntu-latest
    needs: build_images
    steps:
      - uses: actions/checkout@v2
      - id: get-branch-name
        uses: ypicard/get-branch-name-github-action@v1
      - id: get-branch-name-sanitized
        name: Sanitize branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${{ steps.get-branch-name.outputs.branch }} | sed 's/\//-/g')"
      - env:
          AUTH_SECRET_KEY: ${{ secrets.AUTH_SECRET_KEY }}
          AUTH_CLIENT_ID: ${{ secrets.AUTH_CLIENT_ID }}
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.REVIEW_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.REVIEW_AWS_SECRET_ACCESS_KEY }}
        run: |
          export BRANCH_NAME=${{ steps.get-branch-name-sanitized.outputs.branch }}
          cat << EOF > main.tf
          terraform {
            backend "s3" {
              bucket = "fp-review-terraform-state"
              region = "us-east-1"
              key = "${BRANCH_NAME}.tfstate"
            }
          }
          module "main" {
            source = "github.com/FightPandemics/tf-fargate-task//module"
            image_tag = "${BRANCH_NAME}"
            fp_context = "review"
            subdomain = "${BRANCH_NAME}"
            backend_env_variables = [
              {
                name = "PORT"
                value = "8000"
              },
              {
                name = "MONGO_URI"
                value = "localhost:27017"
              },
              {
                name = "GEO_SERVICE_URL"
                value = "localhost:5000"
              },
              {
                name = "AUTH_STATE"
                value = "fight-pandemics"
              },
              {
                name = "AUTH_APP_URL"
                value = "http://localhost:8000"
              },
              {
                name = "AUTH_SECRET_KEY"
                value = "${AUTH_SECRET_KEY}"
              },
              {
                name = "AUTH_DOMAIN"
                value = "fightingpandemics.eu.auth0.com"
              },
              {
                name = "AUTH_CLIENT_ID"
                value = "${AUTH_CLIENT_ID}"
              }
            ]
          }
          EOF
      - run: cat main.tf
      - uses: kciter/terraform-apply-for-aws-action@v3
        with:
          access_key_id: ${{ secrets.REVIEW_AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.REVIEW_AWS_SECRET_ACCESS_KEY }}
          region: us-east-1
      - uses: ItsKarma/aws-cli@v1.70.0
        with:
          args: ecs update-service --cluster review-cluster --service ${{ steps.get-branch-name-sanitized.outputs.branch }} --force-new-deployment
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.REVIEW_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.REVIEW_AWS_SECRET_ACCESS_KEY }}

